<!-- get from
https://[server].orion.mariestopes.org/api/sqlViews.xml?paging=false&fields=*,!created,!lastUpdated&filter=id:in:[ZEMbfPLazaI,AUCwBlRxf2k,IElcYd2UtZJ,VBbWciUfbDf,i3PZx8PUQtd,PgVKlgcVLUt,GnPIvGzQU7G,WFnFbxx9aMC,BpSi9iZ1mdb,Fu3Wc9pt112,Sou7m9Ptwec,zDtkWCN7AuF]

If you have to export again, you'll need to replace any <'s etc in the SQL with escape chars e.g. < with &lt; 
-->
<metadata>
	<sqlViews>
		<sqlView id="ZEMbfPLazaI" name="MSI_StausLogAndSegmentation">
			<sqlQuery>select DISTINCT( org.uid )
 from organisationunit org
 inner join program_organisationunits prgorg on org.organisationunitid=prgorg.organisationunitid
 inner join program prg on prg.programid=prgorg.programid
 
 where prg.uid='${programid}'
 
 and org.organisationunitid not in 
 ( select organisationunitid 
 from programstageinstance psi 
 inner join programstage prgstage on psi.programstageid=prgstage.programstageid 
 where prgstage.uid='${stageid}' )
</sqlQuery>
			<displayName>MSI_StausLogAndSegmentation</displayName>
			<publicAccess>rw------</publicAccess>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="AUCwBlRxf2k" name="MSI_StausLogAndSegmentation_WithParams">
			<sqlQuery>select DISTINCT( org.uid )
 from organisationunit org
 inner join program_organisationunits prgorg on org.organisationunitid=prgorg.organisationunitid
 inner join program prg on prg.programid=prgorg.programid
 
 where prg.uid='${programid}'
 
 and org.organisationunitid not in 
 ( select organisationunitid 
 from programstageinstance psi 
 inner join programstage prgstage on psi.programstageid=prgstage.programstageid 
 where prgstage.uid='${stageid}' )
 
 and org.uid = '${ouId}'
</sqlQuery>
			<displayName>MSI_StausLogAndSegmentation_WithParams</displayName>
			<publicAccess>rw------</publicAccess>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="IElcYd2UtZJ" name="MSI_StickyScript_11_Events">
			<sqlQuery>SELECT * FROM (

-- Part 1 : retrieve all events for org units the status program is assigned to

    SELECT

       psi.uid AS programuid

     , ou.uid AS ouuid

     , coalesce(to_char( psi.executiondate,'YYYYMM'),'201701') AS period

     , coalesce(psi.executiondate,'2017-01-01 00:00:00.0') AS eventdate

     , psi.programstageid AS programstageid

     , prevSts.value AS &quot;prevSts&quot;

     , coalesce(newSts.value, '') AS &quot;newSts&quot;

     , elapsDate.value AS &quot;elapsDate&quot;

     , noteData.value AS &quot;noteData&quot;

    

    FROM organisationunit ou

    

      INNER JOIN program_organisationunits AS prgorg

        ON prgorg.organisationunitid = ou.organisationunitid

        AND prgorg.programid = (select programid from program where uid = '${prgid}')

    

      INNER JOIN program p 

        ON p.programid = prgorg.programid 

    

      INNER JOIN programstage AS ps

        ON p.programid = ps.programid

      

      INNER JOIN programstageinstance AS psi

        ON psi.organisationunitid = ou.organisationunitid 

          AND psi.programstageid = ps.programstageid  

    

      INNER JOIN trackedentitydatavalue AS newSts

        ON psi.programstageinstanceid = newSts.programstageinstanceid

          AND newSts.dataelementid = (select dataelementid from dataelement where uid = 'XhFcLwoD1Dr' limit 1 ) -- 244950

    

      left outer join trackedentitydatavalue AS prevSts

        ON psi.programstageinstanceid = prevSts.programstageinstanceid

          AND prevSts.dataelementid = (select dataelementid from dataelement where uid = 'k95lcIlS4bv' limit 1 ) --786150

          

      left outer join trackedentitydatavalue AS elapsDate

        ON psi.programstageinstanceid = elapsDate.programstageinstanceid

          AND elapsDate.dataelementid = (select dataelementid from dataelement where uid = 'UrD7yr6JLEf' limit 1 ) --  786151

    

      left outer join trackedentitydatavalue AS noteData

        ON psi.programstageinstanceid = noteData.programstageinstanceid

          AND noteData.dataelementid = (select dataelementid from dataelement where uid = 'Yww3Z8MYo1e' limit 1 ) --  244949

    

    WHERE ( '${ouid}' = 'ALL' OR ou.path LIKE '%/${ouid}%' )

      AND ou.hierarchylevel = 6 



UNION

-- Part 2 : if data exists before the eventdate, assume under contract for that period onwards

-- This isn't clever enough yet to deal with gaps in data entry, but ensures are performance

-- indicators are conservative

    SELECT

       psi.uid AS programuid

     , ou.uid AS ouuid

     , coalesce(to_char(firstdataperiod.earliestdate,'YYYYMM'),'201701') AS period

     , coalesce(firstdataperiod.earliestdate,'2017-01-01 00:00:00.0') AS eventdate

     , psi.programstageid AS programstageid

     , '' AS &quot;prevSts&quot;

     , 'UNC' AS &quot;newSts&quot;

     , null AS &quot;elapsDate&quot;

     , null AS &quot;noteData&quot;

    

    FROM organisationunit ou

    

      INNER JOIN program_organisationunits AS prgorg

        ON prgorg.organisationunitid = ou.organisationunitid

        AND prgorg.programid = (select programid from program where uid = '${prgid}')

    

      INNER JOIN program p 

        ON p.programid = prgorg.programid 

    

      INNER JOIN programstage AS ps

        ON p.programid = ps.programid

      

      INNER JOIN programstageinstance AS psi

        ON psi.organisationunitid = ou.organisationunitid 

          AND psi.programstageid = ps.programstageid  

    

      INNER JOIN trackedentitydatavalue AS newSts

        ON psi.programstageinstanceid = newSts.programstageinstanceid

          AND newSts.dataelementid = (select dataelementid from dataelement where uid = 'XhFcLwoD1Dr' limit 1 ) -- 244950

    

      -- add an event for the first period a data value exists, if data exists 

      -- before any of the events in the system 

      INNER JOIN (   

            SELECT  ou.parentid AS ouid, MIN(p.startdate) AS earliestdate

              FROM  datavalue dv

                    INNER JOIN period p 

                      ON p.periodid = dv.periodid

                    INNER JOIN organisationunit ou

                      ON ou.organisationunitid = dv.sourceid

                    INNER JOIN datasetelement dse

                      ON dse.dataelementid = dv.dataelementid

                    INNER JOIN dataset ds  -- only look for non sticky data

                      ON ds.datasetid = dse.datasetid

                      AND ds.uid != 'ZAP8TO9fRZu' -- Status and segmentation dataset

          GROUP BY  ou.parentid

      ) firstdataperiod

        ON firstdataperiod.ouid = ou.organisationunitid

        AND firstdataperiod.earliestdate &lt; date_trunc('month', psi.executiondate)



    WHERE ( '${ouid}' = 'ALL' OR ou.path LIKE '%/${ouid}%' )

      AND ou.hierarchylevel = 6 



UNION

-- Part 3 : same as part 2 but for unknown ou's (e.g. where we don't find events

-- for an ou, see null filter in where clause)

    SELECT

       psi.uid AS programuid

     , ou.uid AS ouuid

     , coalesce(to_char(firstdataperiod.earliestdate, 'YYYYMM'),'201701') AS period

     , coalesce(firstdataperiod.earliestdate, '2017-01-01 00:00:00.0') AS eventdate

     , psi.programstageid AS programstageid

     , '' AS &quot;prevSts&quot;

     , CASE 

       WHEN firstdataperiod.earliestdate IS NULL 

       THEN '' -- js_StickyUtil.js treats blank as unknown status

       ELSE 'UNC' 

       END 

       AS &quot;newSts&quot; 

     , null AS &quot;elapsDate&quot;

     , null AS &quot;noteData&quot;

    

    FROM organisationunit ou

    

      INNER JOIN program_organisationunits AS prgorg

        ON prgorg.organisationunitid = ou.organisationunitid

        AND prgorg.programid = (select programid from program where uid = '${prgid}')

    

      INNER JOIN program p 

        ON p.programid = prgorg.programid 

    

      INNER JOIN programstage AS ps

        ON p.programid = ps.programid

      

      LEFT JOIN programstageinstance AS psi

        ON psi.organisationunitid = ou.organisationunitid 

          AND psi.programstageid = ps.programstageid  

    

      LEFT JOIN trackedentitydatavalue AS newSts

        ON psi.programstageinstanceid = newSts.programstageinstanceid

          AND newSts.dataelementid = (select dataelementid from dataelement where uid = 'XhFcLwoD1Dr' limit 1 ) -- 244950

    

      -- add an event for the first period a data value exists, if data exists 

      -- before any of the events in the system 

      LEFT JOIN (   

            SELECT  ou.parentid AS ouid, MIN(p.startdate) AS earliestdate

              FROM  datavalue dv

                    INNER JOIN period p 

                      ON p.periodid = dv.periodid

                    INNER JOIN organisationunit ou

                      ON ou.organisationunitid = dv.sourceid

                    INNER JOIN datasetelement dse

                      ON dse.dataelementid = dv.dataelementid

                    INNER JOIN dataset ds  -- only look for non sticky data

                      ON ds.datasetid = dse.datasetid

                      AND ds.uid != 'ZAP8TO9fRZu' -- Status and segmentation dataset

          GROUP BY  ou.parentid

      ) firstdataperiod

        ON firstdataperiod.ouid = ou.organisationunitid



    WHERE ( '${ouid}' = 'ALL' OR ou.path LIKE '%/${ouid}%' )

      AND ou.hierarchylevel = 6 

      AND newSts IS null



) all_events

ORDER BY ouuid, eventdate;

</sqlQuery>
			<displayName>MSI_StickyScript_11_Events</displayName>
			<publicAccess>rw------</publicAccess>
			<description/>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="VBbWciUfbDf" name="MSI_StickyScript_12_Events">
			<sqlQuery>SELECT * FROM (

-- Part 1 : retrieve all sub segmentation events for org units the seg program is assigned to

    SELECT 

       psi.uid AS programuid

     , ou.uid AS ouuid

     , coalesce(to_char( psi.executiondate,'YYYYMM'),'201701') AS period

     , coalesce(psi.executiondate,'2017-01-01 00:00:00.0') AS eventdate

     , psi.programstageid AS programstageid

     , prevSts.value AS &quot;prevSts&quot;

     , coalesce(newSts.value, 'UNK') AS &quot;newSts&quot;

     , elapsDate.value AS &quot;elapsDate&quot;

     , noteData.value AS &quot;noteData&quot;

     , prevSubSts.value AS &quot;prevSubSts&quot;

     , coalesce(newSubSts.value, 'UNK') AS &quot;newSubSts&quot;

    

    from organisationunit ou

    

      INNER JOIN program_organisationunits AS prgorg

        ON prgorg.organisationunitid = ou.organisationunitid

        AND prgorg.programid = (select programid from program where uid = '${prgid}')

    

      INNER JOIN program p 

        ON p.programid = prgorg.programid 

    

      INNER JOIN programstage AS ps

        ON p.programid = ps.programid

      

      INNER JOIN programstageinstance AS psi

        ON psi.organisationunitid = ou.organisationunitid 

          AND psi.programstageid = ps.programstageid  

    

      INNER JOIN trackedentitydatavalue AS newSubSts

        ON psi.programstageinstanceid = newSubSts.programstageinstanceid

          AND newSubSts.dataelementid = (select dataelementid from dataelement where uid = 'DwXW311h36K' limit 1 ) --  2869119

    

      LEFT OUTER JOIN trackedentitydatavalue AS newSts

        ON psi.programstageinstanceid = newSts.programstageinstanceid

          AND newSts.dataelementid = (select dataelementid from dataelement where uid = 'wYoGZDnvu3n' limit 1 ) --  244951

    

      LEFT OUTER JOIN trackedentitydatavalue AS prevSts

        ON psi.programstageinstanceid = prevSts.programstageinstanceid

          AND prevSts.dataelementid = (select dataelementid from dataelement where uid = 'T2iHkAEidOd' limit 1 ) --  786154

    

      LEFT OUTER JOIN trackedentitydatavalue AS prevSubSts

        ON psi.programstageinstanceid = prevSubSts.programstageinstanceid

          AND prevSubSts.dataelementid = (select dataelementid from dataelement where uid = 'Lwugb7O0coU' limit 1 ) --  2869137

          

      LEFT OUTER JOIN trackedentitydatavalue AS elapsDate

        ON psi.programstageinstanceid = elapsDate.programstageinstanceid

          AND elapsDate.dataelementid = (select dataelementid from dataelement where uid = 'UrD7yr6JLEf' limit 1 ) --  786151

    

      LEFT OUTER JOIN trackedentitydatavalue AS noteData

        ON psi.programstageinstanceid = noteData.programstageinstanceid

          AND noteData.dataelementid = (select dataelementid from dataelement where uid = 'Yww3Z8MYo1e' limit 1 ) --  244949

    

    WHERE ( '${ouid}' = 'ALL' OR ou.path LIKE '%/${ouid}%' )

      AND ou.hierarchylevel = 6 



UNION

-- Part 2 : Unknowns -- find if there is any data for ou's without a segmentation

-- (e.g. where we don't find events for an ou, see null filter in where clause)

    SELECT

       psi.uid AS programuid

     , ou.uid AS ouuid

     , coalesce(to_char(firstdataperiod.earliestdate, 'YYYYMM'),'201701') AS period

     , coalesce(firstdataperiod.earliestdate, '2017-01-01 00:00:00.0') AS eventdate

     , psi.programstageid AS programstageid

     , 'UNK' AS &quot;prevSts&quot;

     , 'UNK' AS &quot;newSts&quot;

     , null AS &quot;elapsDate&quot;

     , null AS &quot;noteData&quot;

     , 'UNK' AS &quot;prevSubSts&quot;

     , 'UNK' AS &quot;newSubSts&quot;

    

    FROM organisationunit ou

    

      INNER JOIN program_organisationunits AS prgorg

        ON prgorg.organisationunitid = ou.organisationunitid

        AND prgorg.programid = (select programid from program where uid = '${prgid}')

    

      INNER JOIN program p 

        ON p.programid = prgorg.programid 

    

      INNER JOIN programstage AS ps

        ON p.programid = ps.programid

      

      LEFT JOIN programstageinstance AS psi

        ON psi.organisationunitid = ou.organisationunitid 

          AND psi.programstageid = ps.programstageid  

    

      LEFT JOIN trackedentitydatavalue AS newSts

        ON psi.programstageinstanceid = newSts.programstageinstanceid

          AND newSts.dataelementid = (select dataelementid from dataelement where uid = 'wYoGZDnvu3n' limit 1 ) -- 244950

    

      -- add an event for the first period a data value exists, if data exists 

      -- before any of the events in the system 

      INNER JOIN (   

            SELECT ou.parentid AS ouid, MIN(p.startdate) AS earliestdate

              FROM  datavalue dv

                    INNER JOIN period p 

                      ON p.periodid = dv.periodid

                    INNER JOIN organisationunit ou

                      ON ou.organisationunitid = dv.sourceid

                    INNER JOIN datasetelement dse

                      ON dse.dataelementid = dv.dataelementid

                    INNER JOIN dataset ds  -- only look for non sticky data

                      ON ds.datasetid = dse.datasetid

                      AND ds.uid != 'ZAP8TO9fRZu' -- Status and segmentation dataset

          GROUP BY  ou.parentid

      ) firstdataperiod

        ON firstdataperiod.ouid = ou.organisationunitid



    WHERE ( '${ouid}' = 'ALL' OR ou.path LIKE '%/${ouid}%' )

      AND ou.hierarchylevel = 6 

      AND newSts IS null



) all_events 

ORDER BY ouuid, eventdate;</sqlQuery>
			<displayName>MSI_StickyScript_12_Events</displayName>
			<publicAccess>rw------</publicAccess>
			<description/>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="i3PZx8PUQtd" name="MSI_StickyScript_Accreditations">
			<sqlQuery>select psi.uid
 , ou.uid
 , to_char( psi.executiondate,'YYYYMM')
 , psi.executiondate --- ?? eventdate?
 , stsdata.value
 , expdate.value
 , psi.programstageid
 , ( select count(*) 
 from programstageinstance as t_psi 
 where t_psi.executiondate &gt;psi.executiondate 
 and t_psi.organisationunitid = psi.organisationunitid
 and t_psi.programstageid = psi.programstageid ) AS &quot;laterEvents&quot;
 
 from programstageinstance as psi
 inner join organisationunit ou
 on ou.organisationunitid = psi.organisationunitid
 
 inner join programstage as ps
 on psi.programstageid = ps.programstageid
 
 inner join program as prg
 on ps.programid = prg.programid
 and prg.uid = '${prgid}'
 -- and prg.uid = 'qaT1muhnoR2'
 
 left outer join trackedentitydatavalue as stsdata
 on psi.programstageinstanceid = stsdata.programstageinstanceid
 and stsdata.dataelementid = (select dataelementid from dataelement where uid = 'Ilc4iUWAoGo' limit 1 ) -- 244952
 
 left outer join trackedentitydatavalue as expdate
 on psi.programstageinstanceid = expdate.programstageinstanceid
 and expdate.dataelementid = (select dataelementid from dataelement where uid = 'aKFgqbuX0gi' limit 1 ) -- 244953
 
 
 where ( '${startDate}' = 'ALL' OR psi.executiondate &gt;= to_timestamp( '${startDate}', 'YYYY-MM-DD' ) ) 
 and ( '${endDate}' = 'ALL' OR psi.executiondate &lt;= to_timestamp( '${endDate}', 'YYYY-MM-DD' ) ) 
 and ( '${mode}' &lt;&gt; '3Days' OR ( current_timestamp - interval '3 days' ) &lt;= psi.lastupdated )
 and ( '${ouid}' = 'ALL' OR ou.path like '%/${ouid}/%' ) AND ou.hierarchylevel = 6 
 -- and ( ou.uid = 'tyogguMf4CI' )
 
 order by ou.uid, psi.executiondate;
</sqlQuery>
			<displayName>MSI_StickyScript_Accreditations</displayName>
			<publicAccess>rw------</publicAccess>
			<description>MSI Sticky Script sqlView Data - for Accreditation / Authorized - for getting events
</description>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="GnPIvGzQU7G" name="MSI_StickyScript_DataSearch_Form11">
			<sqlQuery>select distinct p.startdate, p.enddate
 from datavalue as dv
 inner join organisationunit as ou
 on dv.sourceid = ou.organisationunitid
 inner join dataelement as de
 on dv.dataelementid = de.dataelementid
 inner join period as p
 on dv.periodid = p.periodid
 where ou.path LIKE '%/${ouid}%'
 and de.uid in ( 'K7wCU6apTwc', 'DS6lHr4eEnw', 'In8fazkWqO5', 'otjftbeXFW2', 'By1ehX6g7Iv', 'o0i2ESQppT5', 'R3JYgPw22T2', 'CSQts1sZhE9', 'uSpx4DHdae6', 'RpslYBBLJ2Q', 'n1gp668Y4Hq', 'ap3kA4OU2UO', 'gtRZqUPY4r0' )
 and deleted = false
 and ( '${startDate}' = 'ALL' OR p.enddate &gt;= to_date( '${startDate}', 'YYYY-MM-DD' ) ) 
 and ( '${endDate}' = 'ALL' OR p.startdate &lt;= to_date( '${endDate}', 'YYYY-MM-DD' ) ) 
 order by p.startdate;
</sqlQuery>
			<displayName>MSI_StickyScript_DataSearch_Form11</displayName>
			<publicAccess>rw------</publicAccess>
			<description>Search data value for period, with multiple data element for form 1.1
</description>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="WFnFbxx9aMC" name="MSI_StickyScript_DataSearch_Form12">
			<sqlQuery>select distinct p.startdate, p.enddate
 from datavalue as dv
 inner join organisationunit as ou
 on dv.sourceid = ou.organisationunitid
 inner join dataelement as de
 on dv.dataelementid = de.dataelementid
 inner join period as p
 on dv.periodid = p.periodid
 where ou.path LIKE '%/${ouid}%'
 and de.uid in ( 'IXd6OFCZAfl', 'lwhzwU6nrJh', 'RDAsWi4QOmo', 'Mo76PCg8nZf', 'WlwUwXL7zjg', 'GZYmBByQIpc', 'pPusa1XgLvR', 'gzItNuOawEm', 'TvP8vLtLokJ', 'cpcwuFL4P63', 'n6ebQdtTEg0', 'mB0Z390lvLE', 'DmGOQFmcuqf', 'h0RirtCDuE6', 'jLevV7SYpaY', 'DRvlWf9T4tg', 'hXLyGfE2sFi', 'k0Ws0xA2vDj' )
 and deleted = false
 and ( '${startDate}' = 'ALL' OR p.enddate &gt;= to_date( '${startDate}', 'YYYY-MM-DD' ) ) 
 and ( '${endDate}' = 'ALL' OR p.startdate &lt;= to_date( '${endDate}', 'YYYY-MM-DD' ) ) 
 order by p.startdate;
</sqlQuery>
			<displayName>MSI_StickyScript_DataSearch_Form12</displayName>
			<publicAccess>rw------</publicAccess>
			<description>Search data value for period, with multiple data element for form 1.2
</description>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="BpSi9iZ1mdb" name="MSI_StickyScript_DataSearch_Form20">
			<sqlQuery>select distinct p.startdate, p.enddate
 from datavalue as dv
 inner join organisationunit as ou
 on dv.sourceid = ou.organisationunitid
 inner join dataelement as de
 on dv.dataelementid = de.dataelementid
 inner join period as p
 on dv.periodid = p.periodid
 where ou.path LIKE '%/${ouid}%'
 and de.uid in ( select av.value
 from program as p
 inner join programattributevalues as pav
 on pav.programid = p.programid
 inner join attributevalue as av
 on av.attributevalueid = pav.attributevalueid
 where uid = '${prgid}' )
 and deleted = false
 and ( '${startDate}' = 'ALL' OR p.enddate &gt;= to_date( '${startDate}', 'YYYY-MM-DD' ) ) 
 and ( '${endDate}' = 'ALL' OR p.startdate &lt;= to_date( '${endDate}', 'YYYY-MM-DD' ) ) 
 order by p.startdate;
</sqlQuery>
			<displayName>MSI_StickyScript_DataSearch_Form20</displayName>
			<publicAccess>rw------</publicAccess>
			<description>Search data value for period, with multiple data element for form 20
</description>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="Fu3Wc9pt112" name="MSI_StickyScript_OrgUnitInOUG_Form1">
			<sqlQuery>select ou.uid as ouid, oug.uid as ougid
 from orgunitgroup as oug
 inner join orgunitgroupmembers as ougm
 on oug.orgunitgroupid = ougm.orgunitgroupid
 inner join organisationunit as ou
 on ougm.organisationunitid = ou.organisationunitid
 where oug.uid in ( 'bieIPjDl9rK', 'InJBtUUZy2c', 'f2sBZWvPAAM', 'jyhbiSfzbU5' );
</sqlQuery>
			<displayName>MSI_StickyScript_OrgUnitInOUG_Form1</displayName>
			<publicAccess>rw------</publicAccess>
			<description>List orgUnits in orgUnitGroup related to form 1</description>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="Sou7m9Ptwec" name="MSI_StickyScript_OrgUnitInOUG_Form2">
			<sqlQuery>select ou.uid as ouid, oug.uid as ougid
 from orgunitgroup as oug
 inner join orgunitgroupmembers as ougm
 on oug.orgunitgroupid = ougm.orgunitgroupid
 inner join organisationunit as ou
 on ougm.organisationunitid = ou.organisationunitid
 where oug.uid in ( 'VgUniUYGInI', 'h90V7SLY1bm', 'dgJIod9A9Zz', 'ZFY5dg0Cr3N', 'Jw7MSDwSY8O' );
</sqlQuery>
			<displayName>MSI_StickyScript_OrgUnitInOUG_Form2</displayName>
			<publicAccess>rw------</publicAccess>
			<description>List orgUnits in orgUnitGroup related to form 2</description>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
		<sqlView id="zDtkWCN7AuF" name="MSI_StickyScript_Unknown">
			<sqlQuery>select ou.uid, 'aggr' as &quot;type&quot;, dv.value as &quot;value&quot;, prgorg.programid as &quot;prgrel&quot;
 from datavalue as dv
 inner join period as p
 on p.periodid = dv.periodid 
 and p.periodtypeid = 3 
 inner join organisationunit as ou
 on ou.organisationunitid = dv.sourceid
 
 inner join dataelement as de
 on dv.dataelementid = de.dataelementid
 
 left outer join program_organisationunits as prgorg
 on ou.organisationunitid = prgorg.organisationunitid
 and prgorg.programid = (select programid from program where uid = '${prgid}')
 
 where de.uid = '${unknowndeid}'
 AND p.startdate = to_date( '${startDate}', 'YYYY-MM-DD' )
 AND ( '${ouid}' = 'ALL' OR ou.path like '%/${ouid}/%' ) AND ou.hierarchylevel = 6 
 AND dv.deleted = false
 -- ABOVE: Aggregate data - with 'unknown' status and 'program relationship' - values: 0, 1, ''
 
 UNION ALL
 
 -- Events Count on orgUnits in the program
 select ou.uid, 'event' as &quot;type&quot;, CAST( count(psi.programstageinstanceid) as text ) as &quot;value&quot;, prgorg.programid as &quot;prgrel&quot;
 from organisationunit as ou
 inner join program_organisationunits prgorg 
 on ou.organisationunitid = prgorg.organisationunitid
 
 inner join program as prg
 on prgorg.programid = prg.programid
 and prg.uid = '${prgid}'
 
 inner join programstage as ps
 on prgorg.programid = ps.programid
 
 left outer join programstageinstance as psi 
 on psi.programstageid = ps.programstageid
 and psi.organisationunitid = ou.organisationunitid
 
 where ( '${ouid}' = 'ALL' OR ou.path like '%/${ouid}%' ) AND ou.hierarchylevel = 6 
 
 group by ou.uid, prgorg.programid
 
 order by type, value;
</sqlQuery>
			<displayName>MSI_StickyScript_Unknown</displayName>
			<publicAccess>rw------</publicAccess>
			<type>QUERY</type>
			<externalAccess>false</externalAccess>
			<cacheStrategy>RESPECT_SYSTEM_SETTING</cacheStrategy>
			<user id="Onhhhc9zamM"/>
		</sqlView>
	</sqlViews>
</metadata>